@using BudgetAnalyzer.Shared.Data
@namespace BudgetAnalyzer.Shared.Controls
@inherits SubscribedComponent

<MudTable T="BudgetCategory" Items="State.SelectedBudget.Categories" Hover="true" Elevation="0">
    <ToolBarContent>
        <MudNumericField Label="Paycheck Amount" Min="0" Step="50" Immediate="true" @bind-Value=PaycheckAmount
                         Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.AttachMoney" />
        <MudSpacer />
        
        <MudSwitch Label="Respect Cutoffs: " LabelPosition="LabelPosition.Start" Color="Color.Primary" @bind-Value=RespectCutoffs />
    </ToolBarContent>

    <HeaderContent>
        <MudTh>Name</MudTh>
        @if(RespectCutoffs)
        {
            <MudTh>Current Balance</MudTh>
        }
        <MudTh>Assigned Amount</MudTh>
    </HeaderContent>

    <RowTemplate>
        <MudTd DataLabel="Name">@context.Name</MudTd>
        @if (RespectCutoffs)
        {
            <MudTd DataLabel="Current Balance">
                <MudNumericField @bind-Value=@(CategoryBalances[context.Id]) />
            </MudTd>
        }
        <MudTd DataLabel="Assigned Amount">@CalculateAssignment(context).ToString("C")</MudTd>
    </RowTemplate>
</MudTable>
<MudButton OnClick="DoNothing">Debug</MudButton>

@code {
    private decimal PaycheckAmount { get; set; }
    private bool RespectCutoffs { get; set; } = true;

    private Dictionary<Guid, decimal> CategoryBalances { get; set; } = default!;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        CategoryBalances = State.SelectedBudget.Categories.ToDictionary(c => c.Id, c => 0M);
    }

    private decimal CalculateAssignment(BudgetCategory category)
    {
        if (!RespectCutoffs || category.Cutoff is not decimal cutoff)
            return category.Percentage.PercentOf(PaycheckAmount);

        decimal baseAssignment = category.Percentage.PercentOf(PaycheckAmount);
        decimal proposedTotal = CategoryBalances[category.Id] + baseAssignment;

        if (proposedTotal <= cutoff) return proposedTotal;
        else return (cutoff - CategoryBalances[category.Id]);
    }

    private void DoNothing() { }

}
